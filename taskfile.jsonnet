local taskfile = import "github.com/ghostsquad/practice-layers/taskfile/taskfile.libsonnet";

taskfile +
(import "github.com/ghostsquad/practice-layers/taskfile/jb.libsonnet") +
(import "github.com/ghostsquad/practice-layers/taskfile/go.libsonnet") +
(import "./config.libsonnet") +
{
  # TODO Var order matters, but since this file is dynamically generated from jsonnet, we lose ordering
  # Regenerating based on this file will result in problems.
  # !!! Don't forget to fix the ordering in Taskfile.yml in the interm
  # https://github.com/go-task/task/issues/1051
  vars+: {
    EXPECTED_GO_VERSION: $.config_.go.expectedVersion,
    K3D_APP_IMAGE: std.join("/", [$.config_.kubernetes.k3d.registry, $.config_.project.repoShort]) + ":{{.GIT_COMMIT}}"
  },
  tasks+: {
    "taskfile:gen"+: {
      deps+: [$.tasks["jb:install"].name_],
    },
    run+: {
      cmds: [
        // TODO might be better for upstream not to assume `./...` is the path
        // and we can use a hidden/task variable instead
        "go run ./cmd/app/..."
      ]
    },
    build+: {
      deps+: [
        // TODO contribute this upstream
        taskfile.CmdTask("go:version:verify")
      ]
    },
    // TODO contribute this upstream
    passthru: taskfile.Task("passthru")
      .WithCmds("{{.CLI_ARGS}}")
    ,
    // TODO contribute this upstream
    tk: taskfile.Task("tk")
      .WithCmds("tk {{.CLI_ARGS}}")
      // TODO Taskfile is becoming a burden... might be time to pickup fn-go again
      // {{.CLI_ARGS}} are passed to jb:install as well, which is a problem
      //.WithDeps($.tasks["jb:install"].name_)
    ,
    "publish:k3d": taskfile.Task("publish:k3d")
      .withCmds(
        taskfile.CmdTask("build")
          .WithVars({
            PUSH_IMAGE: '{{.K3D_APP_IMAGE}}',
            BUILD_ARGS: |||
              --platform linux/amd64 \
              --push
            |||,
          })
      )
    ,
    // TODO DRY up the variables in this task
    "k3d:config:gen": taskfile.Task("k3d:config:gen")
      .WithCmds([
        |||
          jsonnet ./environments/default/k3d.jsonnet | dasel -f - -r json -w yaml --pretty > ./environments/default/k3d.yml
        |||,
        |||
          echo "# Code generated by task taskfile:gen; DO NOT EDIT." \
            | cat - ./environments/default/k3d.yml \
            | sponge ./environments/default/k3d.yml
        |||
      ])
      .WithDeps($.tasks["jb:install"].name_)
    ,
    // TODO add status to skip create if the cluster already exists
    "k3d:create": taskfile.Task("k3d:create")
      .WithCmds("k3d cluster create --config ./environments/default/k3d.yml")
      .WithDeps($.tasks["k3d:config:gen"].name_)
    ,
    // TODO add status to skip starting if the cluster is already started
    // TODO add alias for k3d:start
    "k3d:up": taskfile.Task("k3d:start")
      .WithCmds("k3d cluster start %s" % [$.config_.kubernetes.k3d.clusterName])
    ,
    "k3d:registry:up": taskfile.Task("k3d:registry:up")
      .WithCmds([
        "k3d registry create %s --port %d" % [
          $.config_.kubernetes.k3d.registryNameShort,
          $.config_.kubernetes.k3d.registryPort
        ],
        |||
          echo "edit /etc/hosts with 127.0.0.1 %s"
        ||| % [$.config_.kubernetes.k3d.registry],
      ])
  }
}
